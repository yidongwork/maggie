package geometry;

import java.awt.geom.Point2D;
import java.lang.Object;
import java.util.ArrayList;
import java.awt.Polygon;

public class Poly extends Polygon{

	public Poly(double[] x, double[] y, int nPoints){
		super();
//		this.polyX = polyX;
//		this.polyY = polyY;
	}
	
	
	
//	public void calculateIntersection(Point2D testPt, Segment ray){
//		
//	}
	
	
	
	
//	public static boolean isOn(Segment a, Point2D testPt){
//		
//	}
//	
//	public static boolean isOn(Point2D[]vertex, Point2D testPt){
//		
//	}
	
	public static void main (String args[]){
		double[] x = new double[] {0.0,0.0,4.0};
		double[] y = new double[] {0.0,4.0,0.0};
		ArrayList<Segment> tester = new ArrayList<Segment>();

		Point2D testPt = new Point2D.Double(1.0,1.0);
		Point2D endPt = new Point2D.Double(testPt.getX(), Double.MAX_VALUE);
		
		
		Segment Seg = new Segment (testPt, endPt);
		int nPoints = 3;
		for (int i = 0; i < nPoints ; i++) {
			for (int j = 0; j < nPoints; j++) {
				tester.add(new Segment(new Point2D.Double(x[i%nPoints], y[i%nPoints]), new Point2D.Double(x[(i+1)%nPoints], y[(i+1)%nPoints])));
			}//??添加一个新的segment， segment是由连个array里一一对应的点组成的端点来计算的。%5:最后一个点和第一个点??
		}
		int counter = 0;
		for (int i = 0; i < tester.size(); i++) {
			if (Segment.isIntersected(Seg, tester.get(i)))
				counter++;
		}
		if (counter%2 == 0) {
			System.out.println("out");
		}
		else 
			System.out.println("in");
		return;
			
		}	
}

//public boolean isInPolygon (Point2D point, Point2D[] points, int n){
//
//	
//	int intersectPoint; 
//	for (int i = 0; i < n; i++){
//		Point2D pt1 = points[i];
//		Point2D pt2 = points[(i+1) % n];
//		
//		if (p1.y == p2.y)
//			continue;
//		if (point.y < Math.min(p1.y, p2.y))
//			continue;
//		if (point.y >= Math.math(p1.y, p2.y))
//			continue;
//	}
//	
//	return (intersectPoint % 2 == 1);
	
//}
//	public boolean contains(Point2D testPt){
//	Point2D testPt = (int x, int y);
//	boolean result = false;
//	for (i = 0, )
//	
//}

